{
    "bauhaus": {
        "title": "Lessons from the Bauhaus",
        "paragraphs": [
            "Over the years, I've presented variations of this talk to my teams, drawing inspiration from the Bauhaus and its related design movements. The talk outlines a framework for interpreting modern UI trends and applies principles and lessons from the Bauhaus to the creation of scalable, cohesive UI design systems."
        ],
        "openPdfAriaLabel": "Open Lessons from the Bauhaus presentation PDF (opens in new tab)",
        "openPdfText": "Open PDF",
        "titleSlideAlt": "Lessons from the Bauhaus - Title Slide",
        "viewPresentationLink": "View Full Presentation (PDF)"
    },
    "bauhauslers": {
        "title": "Bauhäuslers",
        "paragraphs": [
            "A journey tracing the Bauhaus movement's historic path from Weimar to Dessau to Berlin during the centennial celebration.",
            "Bauhäusler — a student of the Bauhaus"
        ],
        "imageAlt": "Portrait {number} from Bauhäuslers photography series"
    },
    "clock": {
        "ariaLabel": "Clock showing {time} ET"
    },
    "common": {
        "index": "Index",
        "skipToContent": "Skip to content"
    },
    "theme": {
        "system": "system default",
        "light": "light mode",
        "dark": "dark mode",
        "switchTo": "Switch to {theme}",
        "currentMode": "Current: {mode}. Click to switch."
    },
    "concertLog": {
        "title": "Concert Log",
        "paragraphs": [
            "A set list of concerts attended.",
            "Set in Times New Roman because IYKYK."
        ],
        "encore": "Encore (last show)",
        "indicator": "indicates multiple shows",
        "live": "LIVE",
        "loading": "Loading",
        "search": "Search"
    },
    "githubRepo": {
        "ariaLabel": "Open {username}/{repoName} repository on GitHub"
    },
    "covidAppointments": {
      "title": "COVID Appointment Notifications",
      "image": "Banner graphic with Twilio's logo and three lines pointing towards the logo. The title reads Get COVID-19 Vaccine Notifications using Twilio Serverless Functions.",
      "paragraphs": [
        "This project was an automated notification system that integrated Airtable and Twilio to call you when COVID-19 vaccine appointments became available. At the time, I wrote integrations with systems in California, Massachusetts, and New York City, as well as GetMyVaccine which aggregated vaccine availabilities from CVS, Rite-Aid, and Walgreens."      ],
      "setupGuide": "Setup Guide"
    },
    "covidMyturn": {
        "title": "COVID MyTurn CA Monitor",
        "paragraphs": [
            "This project was built to collect and aggregate vaccine availability data from the CA state vaccination system (MyTurn), covering all 58 counties.",
            "Using CloudWatch, I scheduled a cron-triggered fan-out of serverless Lambda jobs to collect availability data from MyTurn in parallel. A separate Lambda function aggregated the results and stored them in S3 as a single canonical dataset.",
            "This was an optimization to <notifier>Vaccine Appointment Notifications</notifier> to reduce direct calls to MyTurn and to enable other projects."
        ]
    },
    "home": {
        "title": "Devin Nguyen",
        "description": "Software Engineer",
        "intro": "I'm a full-stack software engineer based in New York City, currently building infrastructure for governments and nonprofits to modernize and scale benefits delivery at <aidkit>AidKit</aidkit>.",
        "hypr": "Previously, I was a Principal Software Engineer at <hypr>HYPR</hypr>, where I built passwordless authentication infrastructure trusted by banks, universities, and startups.",
        "cht": "Before that, I was a Senior Member of Technical Staff at <cloudhealth>CloudHealth</cloudhealth> by <vmware>VMware</vmware>, building solutions for cloud governance, cost optimization, and compliance at enterprise scale.",
        "links": {
            "bauhaus": "Lessons from the Bauhaus",
            "bauhaus_photo": "Bauhäuslers",
            "ca_wildfire_mcp": "MCP: Mapping LA Wildfires with AI",
            "concerts": "Concert Log",
            "covid_appointments": "COVID Appointment Notifications",
            "covid_myturn": "COVID MyTurn CA Monitor",
            "discogs": "Discogs",
            "github": "GitHub",
            "la_main_ouverte": "La Main Ouverte",
            "linkedin": "LinkedIn",
            "live": "LIVE",
            "se1": "(S)E1"
        },
        "sections": {
            "connect": "Connect",
            "photography": "Photography",
            "writing": "Writing"
        },
        "skipToContent": "Skip to content"
    },
    "laMainOuverte": {
        "title": "La Main Ouverte",
        "icon": "La Main Ouverte symbol in the shape of an open hand",
        "paragraphs": [
            "Located just a few hours north of New Delhi, Chandigarh is a planned city born from an unusual collaboration with an ambitious spirit following India's independence. After the partition of India in 1947, the Punjab province of British India was split between India and Pakistan. Jawaharlal Nehru, India's first Prime Minister, embarked on a joint effort with Le Corbusier to build a utopian city that would act as a shared capital of Punjab and Haryana. It's a modern, Brutalist paradise that was completed in the 1960s and was meant to set the stage for a radical new beginning for India and was one of Le Corbusier's seminal works in architecture.",
            "The Open Hand, or La Main Ouverte, was a recurring motif throughout Le Corbusier's work and became the defining symbol of Chandigarh."
        ],
        "attribution": "Le Corbusier",
        "pullquote": "\"It turns with the wind, not aimlessly, but to express what life really is: constant change. The hand is open to give and receive. It's a sign of optimism in this world of catastrophe.\"",
        "imageAlt": "Photograph {number} from La Main Ouverte architecture series"
    },
    "mcpWildfire": {
        "title": "MCP: Mapping LA Wildfires with AI",
        "image": "Diagram showing layers of a map with a description of each layer (from bottom to top): Base map of Los Angeles, Evacuation Zone, Active Fire Zone, Damage Assessment, and Damage Photographs",
        "paragraphs": [
            "In response to the January 2025 wildfires in Los Angeles, <aidkit>AidKit</aidkit> partnered with Los Angeles County and the City of Los Angeles to rapidly launch two emergency cash relief programs.",
            "I led the design and implementation of the platform's new geospatial capabilities for disaster response. This included building a sync pipeline that ingested and normalized data from remote tax parcel datasets and CAL FIRE damage inspection data, storing it in PostGIS for spatial queries. We used this data to automatically triage applicants based on parcel-level impact, reducing manual review and speeding up aid delivery.",
            "I also built real-time, interactive maps to give stakeholders live visibility into program reach and eligibility coverage. These programs ultimately distributed over $25M in direct aid to individuals and small businesses across Los Angeles.",
            "This project inspired me to explore how AI and MCP servers can accelerate program administration. For example, we could connect an LLM to CAL FIRE's damage data to enable a wider range of automated triage and eligibility workflows."
        ],
        "readMore": "Read more about the programs",
        "caseStudy": "AidKit Case Study",
        "award": "2025 Stevie Awards for Technology Excellence",
        "routeFifty": "Route Fifty",
        "santaMonicaDailyPress": "Santa Monica Daily Press",
        "santaMonicaMirror": "Santa Monica Mirror",
        "secretLosAngeles": "Secret Los Angeles",
        "nbc": "NBC Los Angeles",
        "latimes": "Los Angeles Times",
        "lacounty": "County of Los Angeles",
        "github": {
            "sectionTitle": "MCP server implementation",
            "linkTitle": "GitHub"
        }
    },
    "notFound": {
        "title": "404",
        "subtitle": "Page Not Found",
        "message": "The page you're looking for doesn't exist.",
        "returnHome": "Return Home"
    },
    "se1": {
        "title": "(S)E1",
        "paragraphs": [
            "Commuting scenes in London from E1 to SE1"
        ],
        "imageAlt": "Photograph {number} from SE1 film photography collection"
    }
}